<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bf.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="cn.bf.po.Student" >
    <id column="stuId" property="stuId" jdbcType="VARCHAR" />
    <result column="stuNum" property="stuNum" jdbcType="VARCHAR" />
    <result column="companyId" property="companyId" jdbcType="VARCHAR" />
    <result column="nameZh" property="nameZh" jdbcType="VARCHAR" />
    <result column="nameJp" property="nameJp" jdbcType="VARCHAR" />
    <result column="nameKana" property="nameKana" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="craft" property="craft" jdbcType="VARCHAR" />
    <result column="height" property="height" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
    <result column="blood" property="blood" jdbcType="VARCHAR" />
    <result column="stuPhone" property="stuPhone" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="stuPhoto" property="stuPhoto" jdbcType="VARCHAR" />
    <result column="entryDate" property="entryDate" jdbcType="DATE" />
    <result column="familyPhone" property="familyPhone" jdbcType="VARCHAR" />
    <result column="addressZh" property="addressZh" jdbcType="VARCHAR" />
    <result column="addressJp" property="addressJp" jdbcType="VARCHAR" />
    <result column="sameClass" property="sameClass" jdbcType="INTEGER" />
    <result column="exitDate" property="exitDate" jdbcType="DATE" />
    <result column="identityNum" property="identityNum" jdbcType="VARCHAR" />
    <result column="passportNum" property="passportNum" jdbcType="VARCHAR" />
    <result column="diplomaNum" property="diplomaNum" jdbcType="VARCHAR" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="isRegister" property="isRegister" jdbcType="VARCHAR" />
    <result column="isTattoo" property="isTattoo" jdbcType="VARCHAR" />
    <result column="isHealth" property="isHealth" jdbcType="VARCHAR" />
    <result column="isDiploma" property="isDiploma" jdbcType="VARCHAR" />
    <result column="isMarried" property="isMarried" jdbcType="VARCHAR" />
    <result column="eyeLeft" property="eyeLeft" jdbcType="REAL" />
    <result column="eyeRight" property="eyeRight" jdbcType="REAL" />
    <result column="nation" property="nation" jdbcType="VARCHAR" />
    <result column="interviewDate" property="interviewDate" jdbcType="DATE" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="createUser" property="createUser" jdbcType="VARCHAR" />
    <result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
    <result column="updateUser" property="updateUser" jdbcType="VARCHAR" />
    <result column="updateDate" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    stuId, stuNum, nameZh, nameJp, nameKana, gender, age, craft, height, weight, blood, 
    stuPhone, qq, stuPhoto, entryDate, familyPhone, addressZh, addressJp, sameClass, 
    stuProxy, exitDate, identityNum, passportNum, diplomaNum, destination, isRegister, 
    isTattoo, isHealth, isDiploma, isMarried, eyeLeft, eyeRight, nation, interviewDate, 
    comment, createUser, createDate, updateUser, updateDate
  </sql>


	<sql id="updateColumn">
		<if test="stuNum != null and stuNum != ''">
			stuNum = #{stuNum},
		</if>
		<if test="companyId != null and companyId != ''">
			companyId = #{companyId},
		</if>
		<if test="nameZh != null and nameZh != ''">
			nameZh = #{nameZh},
		</if>
		<if test="nameJp != null ">
			nameJp = #{nameJp},
		</if>
		<if test="nameKana != null ">
			nameKana = #{nameKana},
		</if>
		<if test="gender != null and gender != ''">
			gender = #{gender},
		</if>
		<if test="age != null ">
			age = #{age},
		</if>
		<if test="craft != null and craft != ''">
			craft = #{craft},
		</if>
		<if test="height != null ">
			height = #{height},
		</if>
		<if test="weight != null ">
			weight = #{weight},
		</if>
		<if test="blood != null ">
			blood = #{blood},
		</if>
		<if test="stuPhone != null and stuPhone != ''">
			stuPhone = #{stuPhone},
		</if>
		<if test="qq != null ">
			qq = #{qq},
		</if>
		<if test="stuPhoto != null ">
			stuPhoto = #{stuPhoto},
		</if>
		<if test="entryDate != null ">
			entryDate = #{entryDate},
		</if>
		<if test="familyPhone != null ">
			familyPhone = #{familyPhone},
		</if>
		<if test="addressZh != null ">
			addressZh = #{addressZh},
		</if>
		<if test="addressJp != null ">
			addressJp = #{addressJp},
		</if>
		<if test="sameClass != null ">
			sameClass = #{sameClass},
		</if>
		<if test="exitDate != null ">
			exitDate = #{exitDate},
		</if>
		<if test="identityNum != null and identityNum != ''">
			identityNum = #{identityNum},
		</if>
		<if test="passportNum != null ">
			passportNum = #{passportNum},
		</if>
		<if test="diplomaNum != null ">
			diplomaNum = #{diplomaNum},
		</if>
		<if test="destination != null ">
			destination = #{destination},
		</if>
		<if test="isRegister != null ">
			isRegister = #{isRegister},
		</if>
		<if test="isTattoo != null ">
			isTattoo = #{isTattoo},
		</if>
		<if test="isHealth != null ">
			isHealth = #{isHealth},
		</if>
		<if test="isDiploma != null ">
			isDiploma = #{isDiploma},
		</if>
		<if test="isMarried != null ">
			isMarried = #{isMarried},
		</if>
		<if test="eyeLeft != null ">
			eyeLeft = #{eyeLeft},
		</if>
		<if test="eyeRight != null ">
			eyeRight = #{eyeRight},
		</if>
		<if test="nation != null ">
			nation = #{nation},
		</if>
		<if test="interviewDate != null ">
			interviewDate = #{interviewDate},
		</if>
		<if test="comment != null ">
			comment = #{comment},
		</if>
		<if test="updateUser != null and updateUser != ''">
			updateUser = #{updateUser},
		</if>
		<if test="updateDate != null">
			updateDate = #{updateDate},
		</if>
	</sql>
	
	<sql id="insertColumn">
		#{stuId},
		#{stuNum},
		#{companyId},
		#{nameZh},
		#{nameJp},
		#{nameKana},
		#{gender},
		#{age},
		#{craft},
		#{height},
		#{weight},
		#{blood},
		#{stuPhone},
		#{qq},
		#{stuPhoto},
		#{entryDate},
		#{familyPhone},
		#{addressZh},
		#{addressJp},
		#{sameClass},
		#{exitDate},
		#{identityNum},
		#{passportNum},
		#{diplomaNum},
		#{destination},
		#{isRegister},
		#{isTattoo},
		#{isHealth},
		#{isDiploma},
		#{isMarried},
		#{eyeLeft},
		#{eyeRight},
		#{nation},
		#{interviewDate},
		#{comment},
		#{createUser},
		#{createDate},
		#{updateUser},
		#{updateDate}
	</sql>
	
	<!-- 根据企业ID查询学生 -->
	<select id="selectStudentByCompanyId" parameterType="java.util.Map" resultType="cn.bf.po.Student">
		select * from student where companyId = #{companyId}
	</select>
	
	<!-- 根据姓名模糊查询学生ID -->
	<select id="selectStuIdByStuName" parameterType="java.util.Map" resultType="java.lang.String">
		select stuId from student
		<where>
			<if test="name != null and name != ''">
				nameZh like '%${name}%'
			</if>
		</where>
		order by stuId
	</select>

	<!-- 查询全部学生 -->
	<select id="selectAllStudent" resultType="cn.bf.po.Student">
		select * from student
	</select>
	
	<!-- 根据主键删除学生 -->
	<select id="deleteStudentByStuId" resultType="int">
		delete from student where stuId = #{stuId}
	</select>
	
	
	<!-- 根据主键查询照片信息 -->
	<select id="selectStuPhotoByStuId" parameterType="cn.bf.po.Student" resultType="java.lang.String">
		select stuPhoto from student where stuId = #{stuId}
	</select>
	
	<!-- 根据主键修改学生非空信息 -->
	<select id="updateStudentByStuId" parameterType="cn.bf.po.Student">
		update student
		<set>
			<include refid="updateColumn" />
		</set>
		where stuId = #{stuId}
	</select>
	
	<!-- 根据学生ID查询学生信息 -->
	<select id="selectStudentByStuId" parameterType="java.lang.String" resultType="cn.bf.po.Student">
		select * from student where stuId = #{stuId}
	</select>
	
	<!-- 根据条件查询学生人数 -->
	<select id="selectStudentCountByCriteria" parameterType="java.util.Map" resultType="java.lang.Integer">
		<!-- select count(s.stuId) from student s, company c -->
		select count(s.stuId) from student s left join company c
		on s.companyId = c.companyId
		<!-- <if test="student.companyId != null and student.companyId != ''">
			, company c
		</if> -->
		<where>
			<if test="student.stuNum != null and student.stuNum != ''">
				and s.stuNum like'%${student.stuNum}%'
			</if>
			<if test="student.nameZh != null and student.nameZh != ''">
				and s.nameZh like'%${student.nameZh}%'
			</if>
			<if test="student.gender != null and student.gender != ''">
				and s.gender = #{student.gender}
			</if>
			<if test="student.craft != null and student.craft != ''">
				and s.craft like'%${student.craft}%'
			</if>
			
			<!-- 去重 -->
			<!-- and s.companyId = c.companyId -->
			
			
			<if test="student.companyId != null and student.companyId != ''">
				and c.companyId = #{student.companyId}
			</if>
			<!-- 如果没有传入企业ID，但是传入了组合ID，则根据组合ID查询组合下的所有企业的所有学生 -->
			<if test="groupId != null and groupId != ''">
				and c.groupId in (
					select g.groupId from `group` g
					where g.groupId = #{groupId}
				)
			</if>
		</where>
	</select>
	
	<!-- 根据非空条件查询学生信息 -->
	<select id="selectStudentByCriteria" parameterType="java.util.Map" resultType="cn.bf.po.Student">
		<!-- select * from student s, company c -->
		select * from student s left join company c
		on s.companyId = c.companyId
		<where>
			<if test="student.stuNum != null and student.stuNum != ''">
				and s.stuNum like'%${student.stuNum}%'
			</if>
			<if test="student.nameZh != null and student.nameZh != ''">
				and s.nameZh like'%${student.nameZh}%'
			</if>
			<if test="student.gender != null and student.gender != ''">
				and s.gender = #{student.gender}
			</if>
			<if test="student.craft != null and student.craft != ''">
				and s.craft like'%${student.craft}%'
			</if>
			
			<!-- 去重 -->
			<!-- and s.companyId = c.companyId -->
			
			<if test="student.companyId != null and student.companyId != ''">
				and c.companyId = #{student.companyId}
			</if>
			<!-- 如果没有传入企业ID，但是传入了组合ID，则根据组合ID查询组合下的所有企业的所有学生 -->
			<if test="groupId != null and groupId != ''">
				and c.groupId in (
					select g.groupId from `group` g
					where g.groupId = #{groupId}
				)
			</if>
		</where>
		order by s.stuNum
		limit #{page}, #{rows}
	</select>
	
	<!-- 根据学生ID修改照片路径 -->
	<select id="updatePhotoPathByStuId" parameterType="cn.bf.po.Student">
		update student
		set stuPhoto = #{stuPhoto}
		where stuId = #{stuId}
	</select>

	<!-- 添加学生 -->
	<select id="insertStudent">
		insert into student values(
			<include refid="insertColumn"></include>
		)
	</select>
	
	<!-- 查询本年度学生编号中最大的编号，用于设置学号 -->
	<select id="selectMaxStuNumByYear" parameterType="java.util.Map" resultType="java.lang.String">
		select max(stuNum) from student where stuNum like '${year}%'
	</select>
	
	<!-- 查询当年学生人数 -->
	<select id="selectCountByYear" resultType="java.lang.Long">
		select count(*) from student
	</select>
	
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from student
    where stuId = #{stuid}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from student
    where stuId = #{stuid}
  </delete>
  <insert id="insert" parameterType="cn.bf.po.Student" >
    insert into student (stuId, stuNum, nameZh, 
      nameJp, nameKana, gender, 
      age, craft, height, 
      weight, blood, stuPhone, 
      qq, stuPhoto, entryDate, 
      familyPhone, addressZh, addressJp, 
      sameClass, stuProxy, exitDate, 
      identityNum, passportNum, diplomaNum, 
      destination, isRegister, isTattoo, 
      isHealth, isDiploma, isMarried, 
      eyeLeft, eyeRight, nation, 
      interviewDate, comment, createUser, 
      createDate, updateUser, updateDate
      )
    values (#{stuid}, #{stunum}, #{namezh}, 
      #{namejp}, #{namekana}, #{gender}, 
      #{age}, #{craft}, #{height}, 
      #{weight}, #{blood}, #{stuphone}, 
      #{qq}, #{stuphoto}, #{entrydate}, 
      #{familyphone}, #{addresszh}, #{addressjp}, 
      #{sameclass}, #{stuproxy}, #{exitdate}, 
      #{identitynum}, #{passportnum}, #{diplomanum}, 
      #{destination}, #{isregister}, #{istattoo}, 
      #{ishealth}, #{isdiploma}, #{ismarried}, 
      #{eyeleft}, #{eyeright}, #{nation}, 
      #{interviewdate}, #{comment}, #{createuser}, 
      #{createdate}, #{updateuser}, #{updatedate}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.bf.po.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuid != null" >
        stuId,
      </if>
      <if test="stunum != null" >
        stuNum,
      </if>
      <if test="namezh != null" >
        nameZh,
      </if>
      <if test="namejp != null" >
        nameJp,
      </if>
      <if test="namekana != null" >
        nameKana,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="craft != null" >
        craft,
      </if>
      <if test="height != null" >
        height,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="blood != null" >
        blood,
      </if>
      <if test="stuphone != null" >
        stuPhone,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="stuphoto != null" >
        stuPhoto,
      </if>
      <if test="entrydate != null" >
        entryDate,
      </if>
      <if test="familyphone != null" >
        familyPhone,
      </if>
      <if test="addresszh != null" >
        addressZh,
      </if>
      <if test="addressjp != null" >
        addressJp,
      </if>
      <if test="sameclass != null" >
        sameClass,
      </if>
      <if test="stuproxy != null" >
        stuProxy,
      </if>
      <if test="exitdate != null" >
        exitDate,
      </if>
      <if test="identitynum != null" >
        identityNum,
      </if>
      <if test="passportnum != null" >
        passportNum,
      </if>
      <if test="diplomanum != null" >
        diplomaNum,
      </if>
      <if test="destination != null" >
        destination,
      </if>
      <if test="isregister != null" >
        isRegister,
      </if>
      <if test="istattoo != null" >
        isTattoo,
      </if>
      <if test="ishealth != null" >
        isHealth,
      </if>
      <if test="isdiploma != null" >
        isDiploma,
      </if>
      <if test="ismarried != null" >
        isMarried,
      </if>
      <if test="eyeleft != null" >
        eyeLeft,
      </if>
      <if test="eyeright != null" >
        eyeRight,
      </if>
      <if test="nation != null" >
        nation,
      </if>
      <if test="interviewdate != null" >
        interviewDate,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="createuser != null" >
        createUser,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="updateuser != null" >
        updateUser,
      </if>
      <if test="updatedate != null" >
        updateDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuid != null" >
        #{stuid},
      </if>
      <if test="stunum != null" >
        #{stunum},
      </if>
      <if test="namezh != null" >
        #{namezh},
      </if>
      <if test="namejp != null" >
        #{namejp},
      </if>
      <if test="namekana != null" >
        #{namekana},
      </if>
      <if test="gender != null" >
        #{gender},
      </if>
      <if test="age != null" >
        #{age},
      </if>
      <if test="craft != null" >
        #{craft},
      </if>
      <if test="height != null" >
        #{height},
      </if>
      <if test="weight != null" >
        #{weight},
      </if>
      <if test="blood != null" >
        #{blood},
      </if>
      <if test="stuphone != null" >
        #{stuphone},
      </if>
      <if test="qq != null" >
        #{qq},
      </if>
      <if test="stuphoto != null" >
        #{stuphoto},
      </if>
      <if test="entrydate != null" >
        #{entrydate},
      </if>
      <if test="familyphone != null" >
        #{familyphone},
      </if>
      <if test="addresszh != null" >
        #{addresszh},
      </if>
      <if test="addressjp != null" >
        #{addressjp},
      </if>
      <if test="sameclass != null" >
        #{sameclass},
      </if>
      <if test="stuproxy != null" >
        #{stuproxy},
      </if>
      <if test="exitdate != null" >
        #{exitdate},
      </if>
      <if test="identitynum != null" >
        #{identitynum},
      </if>
      <if test="passportnum != null" >
        #{passportnum},
      </if>
      <if test="diplomanum != null" >
        #{diplomanum},
      </if>
      <if test="destination != null" >
        #{destination},
      </if>
      <if test="isregister != null" >
        #{isregister},
      </if>
      <if test="istattoo != null" >
        #{istattoo},
      </if>
      <if test="ishealth != null" >
        #{ishealth},
      </if>
      <if test="isdiploma != null" >
        #{isdiploma},
      </if>
      <if test="ismarried != null" >
        #{ismarried},
      </if>
      <if test="eyeleft != null" >
        #{eyeleft},
      </if>
      <if test="eyeright != null" >
        #{eyeright},
      </if>
      <if test="nation != null" >
        #{nation},
      </if>
      <if test="interviewdate != null" >
        #{interviewdate},
      </if>
      <if test="comment != null" >
        #{comment},
      </if>
      <if test="createuser != null" >
        #{createuser},
      </if>
      <if test="createdate != null" >
        #{createdate},
      </if>
      <if test="updateuser != null" >
        #{updateuser},
      </if>
      <if test="updatedate != null" >
        #{updatedate},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bf.po.Student" >
    update student
    <set >
      <if test="stunum != null" >
        stuNum = #{stunum},
      </if>
      <if test="namezh != null" >
        nameZh = #{namezh},
      </if>
      <if test="namejp != null" >
        nameJp = #{namejp},
      </if>
      <if test="namekana != null" >
        nameKana = #{namekana},
      </if>
      <if test="gender != null" >
        gender = #{gender},
      </if>
      <if test="age != null" >
        age = #{age},
      </if>
      <if test="craft != null" >
        craft = #{craft},
      </if>
      <if test="height != null" >
        height = #{height},
      </if>
      <if test="weight != null" >
        weight = #{weight},
      </if>
      <if test="blood != null" >
        blood = #{blood},
      </if>
      <if test="stuphone != null" >
        stuPhone = #{stuphone},
      </if>
      <if test="qq != null" >
        qq = #{qq},
      </if>
      <if test="stuphoto != null" >
        stuPhoto = #{stuphoto},
      </if>
      <if test="entrydate != null" >
        entryDate = #{entrydate},
      </if>
      <if test="familyphone != null" >
        familyPhone = #{familyphone},
      </if>
      <if test="addresszh != null" >
        addressZh = #{addresszh},
      </if>
      <if test="addressjp != null" >
        addressJp = #{addressjp},
      </if>
      <if test="sameclass != null" >
        sameClass = #{sameclass},
      </if>
      <if test="stuproxy != null" >
        stuProxy = #{stuproxy},
      </if>
      <if test="exitdate != null" >
        exitDate = #{exitdate},
      </if>
      <if test="identitynum != null" >
        identityNum = #{identitynum},
      </if>
      <if test="passportnum != null" >
        passportNum = #{passportnum},
      </if>
      <if test="diplomanum != null" >
        diplomaNum = #{diplomanum},
      </if>
      <if test="destination != null" >
        destination = #{destination},
      </if>
      <if test="isregister != null" >
        isRegister = #{isregister},
      </if>
      <if test="istattoo != null" >
        isTattoo = #{istattoo},
      </if>
      <if test="ishealth != null" >
        isHealth = #{ishealth},
      </if>
      <if test="isdiploma != null" >
        isDiploma = #{isdiploma},
      </if>
      <if test="ismarried != null" >
        isMarried = #{ismarried},
      </if>
      <if test="eyeleft != null" >
        eyeLeft = #{eyeleft},
      </if>
      <if test="eyeright != null" >
        eyeRight = #{eyeright},
      </if>
      <if test="nation != null" >
        nation = #{nation},
      </if>
      <if test="interviewdate != null" >
        interviewDate = #{interviewdate},
      </if>
      <if test="comment != null" >
        comment = #{comment},
      </if>
      <if test="createuser != null" >
        createUser = #{createuser},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate},
      </if>
      <if test="updateuser != null" >
        updateUser = #{updateuser},
      </if>
      <if test="updatedate != null" >
        updateDate = #{updatedate},
      </if>
    </set>
    where stuId = #{stuid}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bf.po.Student" >
    update student
    set stuNum = #{stunum},
      nameZh = #{namezh},
      nameJp = #{namejp},
      nameKana = #{namekana},
      gender = #{gender},
      age = #{age},
      craft = #{craft},
      height = #{height},
      weight = #{weight},
      blood = #{blood},
      stuPhone = #{stuphone},
      qq = #{qq},
      stuPhoto = #{stuphoto},
      entryDate = #{entrydate},
      familyPhone = #{familyphone},
      addressZh = #{addresszh},
      addressJp = #{addressjp},
      sameClass = #{sameclass},
      stuProxy = #{stuproxy},
      exitDate = #{exitdate},
      identityNum = #{identitynum},
      passportNum = #{passportnum},
      diplomaNum = #{diplomanum},
      destination = #{destination},
      isRegister = #{isregister},
      isTattoo = #{istattoo},
      isHealth = #{ishealth},
      isDiploma = #{isdiploma},
      isMarried = #{ismarried},
      eyeLeft = #{eyeleft},
      eyeRight = #{eyeright},
      nation = #{nation},
      interviewDate = #{interviewdate},
      comment = #{comment},
      createUser = #{createuser},
      createDate = #{createdate},
      updateUser = #{updateuser},
      updateDate = #{updatedate}
    where stuId = #{stuid}
  </update>
</mapper>