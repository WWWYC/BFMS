<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bf.dao.VacationMapper" >
  <resultMap id="BaseResultMap" type="cn.bf.po.Vacation" >
    <id column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="stuId" property="stuid" jdbcType="VARCHAR" />
    <result column="datetime" property="datetime" jdbcType="TIMESTAMP" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="duration" property="duration" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="createUser" property="createuser" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="updateUser" property="updateuser" jdbcType="VARCHAR" />
    <result column="updateDate" property="updatedate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    uuid, stuId, datetime, reason, duration, comment, createUser, createDate, updateUser, 
    updateDate
  </sql>


	<sql id="insertColumn">
		#{uuid},
		#{stuId},
		#{startDate},
		#{endDate},
		#{reason},
		#{duration},
		#{comment},
		#{createUser},
		#{createDate},
		#{updateUser},
		#{updateDate}
	</sql>
	
	<sql id="updateColumn">
		stuId = #{stuId},
		<if test="startDate != null">
			startDate = date_format(#{startDate}, '%Y-%m-%d %H:%i:%s'),
		</if>
		<if test="endDate != null">
			endDate = date_format(#{endDate}, '%Y-%m-%d %H:%i:%s'),
		</if>
		<if test="reason != null and reason != ''">
			reason = #{reason},
		</if>
		
		<if test="duration != null and duration != ''">
			duration = #{duration},
		</if>
		comment = #{comment},
		updateUser = #{updateUser},
		updateDate = date_format(#{updateDate}, '%Y-%m-%d %H:%i:%s'),
	</sql>
	
	<!-- 根据主键删除请假信息 -->
	<select id="deleteVacationByUuid" parameterType="cn.bf.po.Vacation">
		delete from vacation where uuid = #{uuid}
	</select>
	
	<!-- 根据主键更新请假信息 -->
	<select id="updateVacationByUuid" parameterType="cn.bf.po.Vacation">
		update vacation
		<set>
			<include refid="updateColumn" />
		</set>
		where uuid = #{uuid}
	</select>

	<!-- 根据主键查询请假信息 -->
	<select id="selectVacationByUuid" parameterType="cn.bf.po.Vacation" resultType="cn.bf.po.Vacation">
		select * from vacation v, student s
		where
		v.stuId = s.stuId
		and uuid = #{uuid}
	</select>

	<!-- 插入一条数据 -->
	<select id="insertVacation" parameterType="cn.bf.po.Vacation">
		insert into vacation values(
			<include refid="insertColumn" />
		)
	</select>
	
	<!-- 根据多条件查询请假人数 -->
	<select id="selectCountByCriteria" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(v.uuid) from vacation v, student s
		<where>
			s.stuId = v.stuId
			<if test="stuIdList != null and stuIdList.size() > 0">
				and v.stuId in 
				<foreach collection="stuIdList" index="index" item="stuId" open="("
					separator="," close=")">
					#{stuId}
				</foreach>
			</if>
			<if test="startDate != null and startDate != ''">
				<![CDATA[
					and date_format(startDate, '%Y-%m-%d %H:%i:%s') >= date_format('${startDate}', '%Y-%m-%d %H:%i:%s')
				]]>
				
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[
					and date_format(startDate, '%Y-%m-%d %H:%i:%s') <= date_format('${endDate}', '%Y-%m-%d %H:%i:%s')
				]]>
			</if>
		</where>
	</select>

	<!-- 根据多条件查询请假信息 -->
	<select id="selectVacationByCriteria" parameterType="java.util.Map" resultType="cn.bf.po.Vacation">
		select * from vacation v, student s
		
		<where>
			s.stuId = v.stuId
			<if test="stuIdList != null and stuIdList.size() > 0">
				and v.stuId in 
				<foreach collection="stuIdList" index="index" item="stuId" open="("
					separator="," close=")">
					#{stuId}
				</foreach>
			</if>
			<if test="startDate != null and startDate != ''">
				<![CDATA[
					and date_format(startDate, '%Y-%m-%d %H:%i:%s') >= date_format('${startDate}', '%Y-%m-%d %H:%i:%s')
				]]>
				
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[
					and date_format(startDate, '%Y-%m-%d %H:%i:%s') <= date_format('${endDate}', '%Y-%m-%d %H:%i:%s')
				]]>
			</if>
		</where>
		order by startDate desc
		limit #{page}, #{rows}
	</select>






  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from vacation
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from vacation
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.bf.po.Vacation" >
    insert into vacation (uuid, stuId, datetime, 
      reason, duration, comment, 
      createUser, createDate, updateUser, 
      updateDate)
    values (#{uuid,jdbcType=VARCHAR}, #{stuid,jdbcType=VARCHAR}, #{datetime,jdbcType=TIMESTAMP}, 
      #{reason,jdbcType=VARCHAR}, #{duration,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, 
      #{createuser,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, #{updateuser,jdbcType=VARCHAR}, 
      #{updatedate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.bf.po.Vacation" >
    insert into vacation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="stuid != null" >
        stuId,
      </if>
      <if test="datetime != null" >
        datetime,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="createuser != null" >
        createUser,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="updateuser != null" >
        updateUser,
      </if>
      <if test="updatedate != null" >
        updateDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="stuid != null" >
        #{stuid,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createuser != null" >
        #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="updatedate != null" >
        #{updatedate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bf.po.Vacation" >
    update vacation
    <set >
      <if test="stuid != null" >
        stuId = #{stuid,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createuser != null" >
        createUser = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        updateUser = #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="updatedate != null" >
        updateDate = #{updatedate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bf.po.Vacation" >
    update vacation
    set stuId = #{stuid,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      reason = #{reason,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      createUser = #{createuser,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      updateUser = #{updateuser,jdbcType=VARCHAR},
      updateDate = #{updatedate,jdbcType=TIMESTAMP}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>